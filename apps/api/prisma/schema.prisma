datasource db { provider = "postgresql"; url = env("DATABASE_URL") }
generator client { provider = "prisma-client-js" }

model Organization {
  id             String         @id @default(uuid())
  name           String
  plan           String         @default("basic")
  createdAt      DateTime       @default(now())
  users          User[]
  contacts       Contact[]
  conversations  Conversation[]
}

model User {
  id            String   @id @default(uuid())
  orgId         String
  org           Organization @relation(fields: [orgId], references: [id])
  name          String
  email         String   @unique
  role          String
  passwordHash  String
  createdAt     DateTime @default(now())
}

model Contact {
  id               String   @id @default(uuid())
  orgId            String
  org              Organization @relation(fields: [orgId], references: [id])
  name             String?
  whatsapp         String?  @db.VarChar(20)
  email            String?
  source           String?
  tags             String[]
  lastInteractionAt DateTime?
  conversations    Conversation[]
}

model Conversation {
  id             String   @id @default(uuid())
  orgId          String
  org            Organization @relation(fields: [orgId], references: [id])
  contactId      String
  contact        Contact  @relation(fields: [contactId], references: [id])
  channel        String   @default("whatsapp")
  status         String   @default("open")
  lastMessageAt  DateTime?
  messages       Message[]
}

model Message {
  id             String   @id @default(uuid())
  orgId          String
  org            Organization @relation(fields: [orgId], references: [id])
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  direction      String   // 'in' | 'out'
  body           String
  raw            Json?
  intent         String?
  sentiment      String?
  aiSummary      String?
  aiScore        Float?
  createdAt      DateTime @default(now())
}
